#!/usr/bin/env node

'use strict';

var url = require('url');
var request = require('request');
var cheerio = require('cheerio');

function buildUrl(keyword) {
  return url.format({
    protocol: 'https:',
    host: 'tw.dictionary.search.yahoo.com',
    pathname: '/search',
    query: { p: keyword }
  });
}

function fetchPage(keyword, callback) {
  var options = {
    url: buildUrl(keyword),
    headers: {
      'User-Agent': 'Mozilla/5.0'
    }
  };

  request(options, function(error, response, body) {
    if (error) {
      callback(error);
    } else if (response.statusCode != 200) {
      callback(new Error('Error: ' + response.statusCode));
    } else {
      callback(null, body);
    }
  });
}

function parseBody(body) {
  var $ = cheerio.load(body);
  var root = $('#results');
  return {
    'word': root.find('#term').first().text(),
    "pronunciation": root.find("#pronunciation_pos").text()
  };
}

function displayResult(result) {
  console.log(result);
}

function main() {
  var args = process.argv.splice(2);
  if (args.length === 0) {
    console.error('Usage: ydict-client <word or phrase>');
    process.exit(1);
  }
  var keyword = args.join(' ');

  fetchPage(keyword, function(error, body) {
    if (error) throw new Error(error);
    var result = parseBody(body);
    displayResult(result);
  });
}

if (process.env.NODE_ENV === 'test') {
  module.exports._private = {
    buildUrl: buildUrl,
    fetchPage: fetchPage,
    parseBody: parseBody
  }
}

if (require.main === module) {
  main();
}
